let g = (\f -> (let b = (\d -> (\e -> if (e == f) then True else if ((f % e) == 0) then False else (d $ (e + 1)))) in let c = (\c -> (b $ (c $ c))) in (b $ (c $ c)) $ 2)) in let h = let b = (\d -> (\e -> if (e == 1) then True else if ((e % 2) == 1) then False else (d $ (e / 2)))) in let c = (\c -> (b $ (c $ c))) in (b $ (c $ c)) in (let b = (\d -> (\e -> if ((e > 1000000) & ((g $ e) & (h $ (e + 1)))) then e else (d $ (e + 1)))) in let c = (\c -> (b $ (c $ c))) in (b $ (c $ c)) $ 2)